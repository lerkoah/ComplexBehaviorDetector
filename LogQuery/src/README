LogQuery: Query abstraction for ALMA-ELK logs queries.
======================================================
This is the first release of a script to query ALMA-ELK (Kibana) from the command line. 
ICT-9017. If you find any problem please open an ICT ticket using DEVOPS as component
and label "LogAn".


Install
-------
This is a standalone script for Python 2 and 3. 

1. Install elasticsearch-dsl with pip: 
  pip install elasticsearch-dsl

2. Checkout from https://svn.alma.cl/p2/trunk/ADC/SW/OFFLINE/ALMA-ELK/LogQuery/
  svn co https://svn.alma.cl/p2/trunk/ADC/SW/OFFLINE/ALMA-ELK/LogQuery/

3. Enable as : 
  cp LogQuery.py ~/bin/LogQuery

4. Check that everything by running

  LogQuery --unittest


Basic Usage
-----------
You need to be inside ALMA network, or from a friendly site (NAOJ, NRAO, ESO), or a through VPN.


Start with the most updated source of help:
  LogQuery --help
  LogQuery --extrahelp

Try any oh these:
  LogQuery -f 2017-01-30T09:19:00.000 -t 2017-01-30T09:20:00.000 '*' --limit 10 -v
  LogQuery -f 2017-01-30T09:19:00.000 -t 2017-01-30T09:20:00.000 '*' --limit 10 -g INFO -o APE1

  LogQuery -f 2017-01-30T09:19:00.000 -t 2017-01-30T09:20:00.000 -g DEBUG '*' --stat
  LogQuery -f 2017-01-30T09:19:00.000 -t 2017-01-30T09:20:00.000 -g INFO '*' --stat
  LogQuery -f 2017-01-30T09:19:00.000 -t 2017-01-30T09:20:00.000 -g ERROR '*' --stat

  LogQuery 'CORR AND "lags processing timing"' -c TimeStamp,Process,text -g DEBUG -f 2017-01-30T09:19:21.849 -t 2016-11-06T09:24:21.849 -v --limit 10

Environment vars could be used instead of parameters. The following shortcuts are available:

    LQ_INDEX
    LQ_ORIGIN
    LQ_FROMTIME
    LQ_TOTIME
    LQ_LOGLEVEL
    LQ_LIMIT
    LQ_FORMAT
    LQ_COLUMNS

Examples

export LQ_FROMTIME=2017-01-30T00:00:00.000
export LQ_TOTIME=2017-01-30T10:00:00.000
export LQ_INDEX=online
export LQ_LIMIT=10
export LQ_ORIGIN=APE1

LogQuery 'CORR AND "lags processing timing"' -v 
LogQuery --columns "@timestamp,origin,LogLevel,Process,SourceObject,text" "*"
LogQuery -v --format "{@timestamp} {LogLevel} [{SourceObject}] {text}" '"CONTROL/DV01"'

Note that command parameters overwrites environment variables:

LogQuery --origin TFINT --loglevel DEBUG "*" -v



